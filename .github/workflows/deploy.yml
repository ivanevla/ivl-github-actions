# open repository settings -> Secrets and variables -> Actions
# Add 3 secrets: SERVER_HOST, SERVER_PORT, SERVER_USER, SERVER_SSH

# actions/checkout@v3
# actions/setup-java@v3
# gradle/gradle-build-action@v2 -> https://github.com/gradle/gradle-build-action
# actions/upload-artifact@v3 -> https://github.com/actions/upload-artifact
# actions/download-artifact@v3 -> https://github.com/actions/download-artifact
# easingthemes/ssh-deploy@main -> https://github.com/easingthemes/ssh-deploy

name: Deploy to Server (as service)

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: clean build
          cache-disabled: true

      - name: Rename JAR
        run: mv build/libs/ivl-github-actions-0.0.1-SNAPSHOT.jar build/libs/ivl-github-actions.jar

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: |
            build/libs/ivl-github-actions.jar
            scripts/
          if-no-files-found: error
          retention-days: 1

  deploy:
    needs: build
    name: Deploy
    runs-on: ubuntu-22.04

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: artifact

      - name: Deploy to Staging server
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH }}
          REMOTE_HOST: ${{ secrets.SERVER_HOST }}
          REMOTE_PORT: ${{ secrets.SERVER_PORT }}
          REMOTE_USER: ${{ secrets.SERVER_USER }}
          TARGET: "/appcfg"


# Post deploy (install service)
# Post deploy (restart service)

